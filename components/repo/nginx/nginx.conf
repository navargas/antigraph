
events {
  worker_connections  1024;

}

http {
  upstream authx {
    server authenticator:80;
  }
  upstream assetx {
    server repo_adapter:80;
  }

  server {
    rewrite_log on;
    error_log /var/log/nginx/error.log debug;
    listen 9090;

    proxy_set_header Host             $http_host;   # required for docker client's sake
    proxy_set_header X-Real-IP        $remote_addr; # pass on real client's IP
    proxy_set_header Authorization    ""; # see https://github.com/dotcloud/docker-registry/issues/170

    client_max_body_size 0; # disable any limits to avoid HTTP 413 for large image uploads
    chunked_transfer_encoding on;

    location ~ /assets/([^/]+)/([^/?]+)/ {
      rewrite ^/assets/([^/]+)/([^/?]+) /static/$1/$2/$http_X_API_KEY;
    }

    location /adapter_auth {
      proxy_pass http://assetx/accept;
    }

    location ~ /static/([^/]+)/([^/?]+)/([^/]+) {
      set $file $1;
      set $version $2;
      set $key $3;
      auth_request /adapter_auth;
      sendfile  on;
      alias /var/asset-data/team/$1/$2/filename.txt;
    }
    
  }

  include       mime.types;
  default_type  application/octet-stream;

  sendfile        on;
  keepalive_timeout  65;

}
