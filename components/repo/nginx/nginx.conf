
events {
  worker_connections  1024;

}

http {
  upstream assetx {
    server repo_adapter:80;
  }

  server {
    rewrite_log on;
    error_log /var/log/nginx/error.log debug;
    listen 9090;

    client_max_body_size 0; # disable any limits to avoid HTTP 413 for large image uploads
    chunked_transfer_encoding on;

    # Main asset location
    location ~ /assets/([^/]+)/([^/?]+)/ {
      if ($request_method = GET ) {
        rewrite ^/assets/([^/]+)/([^/?]+) /static/$1/$2/$http_X_API_KEY;
      }
      if ($request_method = POST ) {
        rewrite ^/assets/([^/]+)/([^/?]+) /upload/$1/$2/$http_X_API_KEY;
      }
    }

    # Retrieve team info from key
    location /get_team_auth {
      proxy_pass http://assetx/assets/$asset/$version;
    }

    # Pass upload request to repo_adapter
    location ~ /upload/([^/]+)/([^/?]+)/([^/]+) {
      set $asset $1;
      set $version $2;
      set $key $3;
      proxy_pass http://assetx/assets/$asset/$version;
    }

    # Fetch filename from repo_adapter and serve file
    location ~ /static/([^/]+)/([^/?]+)/([^/]+) {
      set $asset $1;
      set $version $2;
      set $key $3;
      auth_request /get_team_auth;
      auth_request_set $team $upstream_http_X_AUTH_TEAM;
      auth_request_set $filename $upstream_http_X_AUTH_FILENAME;
      sendfile  on;
      add_header Content-Disposition 'attachment; filename="$filename"';
      alias /var/asset-data/$team/$asset/$version/$filename;
    }
  }

  include       mime.types;
  default_type  application/octet-stream;

  sendfile        on;
  keepalive_timeout  65;

}
